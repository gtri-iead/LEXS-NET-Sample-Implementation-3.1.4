//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1434
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Thinktecture.ServiceModel.Extensions.Metadata.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "2.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.Diagnostics.DebuggerStepThrough()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Thinktecture.ServiceModel.Extensions.Metadata.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ServiceHost does not have any http base addresses. Therefore an absolute Uri is required as the endpoint address of metadata endpoint..
        /// </summary>
        internal static string AbsoluteUriRequired {
            get {
                return ResourceManager.GetString("AbsoluteUriRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The requested uri does not seem to be a valid uri. Requested uri must be either as same as the endpoint uri of the metadata service or a child uri of that..
        /// </summary>
        internal static string AmbiguousRequest {
            get {
                return ResourceManager.GetString("AmbiguousRequest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to GetMetadataServiceUri method cannot be invoked without properly validating the state of MetadataServiceBehavior. metadataServiceUrl member is {0}..
        /// </summary>
        internal static string DebugEndpointAddressNullInGetMetadataServiceUri {
            get {
                return ResourceManager.GetString("DebugEndpointAddressNullInGetMetadataServiceUri", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MetadataServiceRuntimeProperties are not available..
        /// </summary>
        internal static string DebugMetadataServiceRuntimePropertiesNotAvailable {
            get {
                return ResourceManager.GetString("DebugMetadataServiceRuntimePropertiesNotAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to OperationContext is not initialized. .
        /// </summary>
        internal static string DebugOperationContextNotInitialized {
            get {
                return ResourceManager.GetString("DebugOperationContextNotInitialized", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Parameter {0} could not be null..
        /// </summary>
        internal static string DebugParameterIsNull {
            get {
                return ResourceManager.GetString("DebugParameterIsNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to StaticMetadataBehavior behavior could not be used without specifying a valid uri for static metadata endpoint address. Configured metadata endpoint address is either null or an empty string..
        /// </summary>
        internal static string EndpointAddressNullOrEmptyString {
            get {
                return ResourceManager.GetString("EndpointAddressNullOrEmptyString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File not found..
        /// </summary>
        internal static string HttpErrorFileNotFound {
            get {
                return ResourceManager.GetString("HttpErrorFileNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Endpoint address specified for static metadata endpoint is invalid. Specified endpoint address is {0}..
        /// </summary>
        internal static string InvalidEndpointAddress {
            get {
                return ResourceManager.GetString("InvalidEndpointAddress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Path specified for RootMetadataLocation property does not contain a valid path. Check inner exception for more details..
        /// </summary>
        internal static string InvalidRootMetadataLocation {
            get {
                return ResourceManager.GetString("InvalidRootMetadataLocation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Endpoint address specified for static metadata endpoint must be an http  uri. This version of MetadataServiceExtension does not support https endpoints..
        /// </summary>
        internal static string NonHttpAddress {
            get {
                return ResourceManager.GetString("NonHttpAddress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to StaticMetadataBehavior behavior could not be used without specifying a valid relative or absolute path for the rootMetadataLocation. Configured rootMetadataLocation is either null or an empty string..
        /// </summary>
        internal static string RootMetadataLocationNullOrEmptyString {
            get {
                return ResourceManager.GetString("RootMetadataLocationNullOrEmptyString", resourceCulture);
            }
        }
    }
}
